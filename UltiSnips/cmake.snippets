snippet head "CMake Head" !b
CMAKE_MINIMUM_REQUIRED (VERSION ${3:2.8})
PROJECT (${1:project})

ENABLE_TESTING()
SET (extra_libs, ${2:\$\{extra_libs\}})
$0
endsnippet


# exe hello.c => cmake add compile target hello
#   Because i'll use vim completion (c-x,c-f) 
#   to complete files, so regex trigger is better
snippet "exe\s+([\w]+)(\.\w+)" "ADD_EXECUTABLE for single file" rb
ADD_EXECUTABLE (${1:`!p snip.rv = match.group(1)`} ${2:`!p snip.rv = match.group(1) + match.group(2)`})
TARGET_LINK_LIBRARIES ($1 ${3:\$\{extra_libs\}})
ADD_TEST ($1_Runs $1)
$0
endsnippet

# exe proj_hello hello.c main.c aux.c => cmake add compile target proj_hello
#   Because i'll use vim completion (c-x,c-f) 
#   to complete files, so regex trigger is better
snippet "exe\s+([\w.]+)\s+(\w[\w\s.]+)" "ADD_EXECUTABLE (NAME FILES)" rb
SET (${1:`!p snip.rv = match.group(1)`}_src \$\{$1_src\} ${2:`!p snip.rv = match.group(2)`})
ADD_EXECUTABLE ($1 \$\{$1_src\})
TARGET_LINK_LIBRARIES ($1 ${3:\$\{extra_libs\}})
ADD_TEST ($1_Runs $1)
$0
endsnippet


snippet opt "OPTION (NAME description ON/OFF)" !b
OPTION (${1:NAME} "${2:description}" ${3:ON})
endsnippet

snippet incdir "INCLUDE_DIRECTORIES (path)" !b
INCLUDE_DIRECTORIES ("${1:path}")
endsnippet

snippet -i "INCLUDE (...)" !b
INCLUDE (${1:path})
endsnippet

snippet -l "LINK_DIRECTORIES (libs)" !b
LINK_DIRECTORIES (${1:libs})
endsnippet

snippet set "SET (var value)" !b
SET (${1:var} ${2:value})
endsnippet

# TODO more action like install, etc...
